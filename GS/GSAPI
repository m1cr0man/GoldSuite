--Theme API (c)2014 GoldProgramming
--Csstform

----------------------------------------------------------
--Theme layout:
--theme={
--[1]=Theme Name
--[2]=Header Color
--[3]=Footer Color
--[4]=Main Color
--[5]=Secondary Color
--[6]=Text Color
--[7]=Secondary Text Color
--}
--this program will be loaded my this api and fed to the programs.
--this api is universal - all GoldSuite programs will be able to read this.
--Load this api at the start of the program.

----------------------------------------------------------
--Universal Settings layout (WIP):
--settings={
--[1]=directory (leave blank if at root)
--[2]=theme (leave blank if default)

function loadSettings()
	local settings, index = {}, 1
	local file = fs.open("GS/universal.conf", "r")
	for line in file:lines() do
		if #line < 1 then break end
		local valName, value = line:match("(%w+) *= *(%w+)")
		settings[valName] = value
	end
	file:close()
	return settings
end

function saveSettings(settings)
	local file = fs.open("GS/universal.conf", "w")
	for i, value in ipairs(settings) do
		file.write(value.."\n")
	end
	file:close()
end

--[[Theme file layout:
	<name> = <text>, <header>, <body>, <footer>, <secondary>, <secondary text>
]]--

function loadTheme()
	local file = fs.open("GS/themes.conf", "r")
	local themes = {}
	for theme in file:lines() do
		if #theme < 1 then break end
		local name, text, header, body, footer, secondary, secondtext = theme:match("(%w+) *= *(%w+), *(%w+), *(%w+), *(%w+), *(%w+), *(%w+)")
		themes[name] = {["text"] = text, ["header"] = tonumber(header), ["body"] = tonumber(body), ["footer"] = tonumber(footer), ["secondary"] = tonumber(secondary), ["secondtext"] = tonumber(secondtext)}
	end
	file:close()
	return themes
end

function saveThemes(themes)
	local file = fs.open("GS/themes.conf", "w")
	for name, data in themes do
		file.write(name.." = "..table.concat(data, ", "))
	end
	file:close()
end