--TODO LIST CSSTFORM 2014

local done = false
local x, y
local xmax, ymax

xmax, ymax = term.getSize()

function drawBak()
	for y=1, ymax do
		term.setBackgroundColor(colors.brown)
		term.setCursorPos(1,y)
		term.clearLine()
	end
	for y=3, ymax do
		term.setBackgroundColor(colors.yellow)
		term.setCursorPos(1,y)
		term.clearLine()
	end
	y = ymax - 2
	for ymax = ymax, y, -1 do
		term.setBackgroundColor(colors.lightGray)
		term.setCursorPos(1,ymax)
		term.clearLine()
	end
end

term.clear()
term.setCursorPos(1,1)

local todo = {}
local input

print("Would you like to load a todo list? (y/n)")
_,input = os.pullEvent("char")
if input == "y" then
	local file = fs.open("tdl.list", "r")
	local data = file.readAll()
	file.close()
	todo = textutils.unserialize(data)
else
	--do nothing
end

while done == false do
	term.clear()
	if term.isColor() then
		drawBak()
	end
	term.setCursorPos(1,1)
	if term.isColor() then
		term.setTextColor(colors.red)
	end
	
	if (term.isColor()) then
		term.setBackgroundColor(colors.brown)
	end
	print("TODO LIST: ")

	term.setCursorPos(1,3)
	if term.isColor() then
		term.setTextColor(colors.black)
		term.setBackgroundColor(colors.yellow)
	end
	for i,v in pairs(todo) do
		print(v)
	end
	
	if (term.isColor()) then
		term.setBackgroundColor(colors.lightGray)
	end
	term.setCursorPos(1,18)
	print("1-9 to add/delete E to exit S to save")
	_,input = os.pullEvent("char")
	
	if (term.isColor()) then
		term.setBackgroundColor(colors.brown)
	end
	if input == "e" then
		break
	elseif input == "s" then
		local file = fs.open("tdl.list", "w")
		file.write(textutils.serialize(todo))
		file.close()
	elseif input == "1" then
		if todo[1] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[1] = "[1]" .. input
		else
			todo[1] = nil
		end
	elseif input == "2" then
		if todo[2] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[2] = "[2]" .. input
		else
			todo[2] = nil
		end
	elseif input == "3" then
		if todo[3] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[3] = "[3]" .. input
		else
			todo[3] = nil
		end
	elseif input == "4" then
		if todo[4] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[4] = "[4]" .. input
		else
			todo[4] = nil
		end
	elseif input == "5" then
		if todo[5] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[5] = "[5]" .. input
		else
			todo[5] = nil
		end
	elseif input == "6" then
		if todo[6] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[6] = "[6]" .. input
		else
			todo[6] = nil
		end
	elseif input == "7" then
		if todo[7] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[7] = "[7]" .. input
		else
			todo[7] = nil
		end
	elseif input == "8" then
		if todo[8] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[8] = "[8]" .. input
		else
			todo[8] = nil
		end
	elseif input == "9" then
		if todo[9] == nil then
			term.clear()
			term.setCursorPos(1,1)
			print("What do you need to do?")
			input = read()
			tostring(input)
			todo[9] = "[9]" .. input
		else
			todo[9] = nil
		end
	end				
end

if (term.isColor()) then
	term.setBackgroundColor(colors.black)
	term.setTextColor(colors.white)
end
term.clear()
term.setCursorPos(1,1)
